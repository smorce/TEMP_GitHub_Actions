name: Model Predict

on:
  schedule:
    - cron: '*/3 * * * *' # デバッグ中。3分おきに実行
    # - cron: '0 */22 * * *' # 毎時 0分に 22時間おきに実行。2時間の待機時間があるので22時間ごと。実際には predict に時間がかかったりするのでちょっとずつズレていくかも。月1くらいでちゃんと確認するフローが良いかも。実務ではDAGで運用した方良い
  # Github Actionsワークフローをコードレベルで起動するには、workflow_dispatchトリガーを使用する必要がある
  workflow_dispatch:

# Settingsを扱えるのは、リポジトリのオーナーのみ
# run内に書いたスクリプトでsecretが扱えるようになる
# https://qiita.com/developer-kikikaikai/items/60b209c065f076dca7a1
env:
  project_id: ${{ secrets.GCP_PROJECT_ID }}         # GCPのプロジェクトID
  service_account_key: ${{ secrets.GCP_SA_KEY }}    # GCPのサービスアカウント

jobs:
  Model-Predict:
    runs-on: ubuntu-latest
    steps:

      - name: Access the repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.7'
          architecture: 'x64'

      - name: Install necessary libraries
        run: |
          python -m pip install --upgrade pip
          pip install -r etc/requirements.txt

      # 作業前に最新の状態にする
      - name: Run Update
        run: |
            git config --global user.email ${{secrets.EMAIL}}
            git config --global user.name ${{secrets.NAME}}
            git pull

      - name: Run Python make_regression_data
        run: |
            echo $service_account_key | base64 --decode > ./credential.json   # base64 のデータをデコードしてクレデンシャル情報を復元する(https://soypocket.com/it/github-actions-json-secrets/)
            export GOOGLE_APPLICATION_CREDENTIALS="./credential.json"         # デコードしたクレデンシャル情報をセットする
            python src/make_data/make_regression.py                           # スクリプト実行

      - name: Run Python complement_missing_value_data
        run: |
            sleep 5s                                                          # 5秒後に実行する(なんとなくバッファを入れた)
            export GOOGLE_APPLICATION_CREDENTIALS="./credential.json"         # 同じ処理をしないといけない。もっと良いやり方はありそう
            python src/make_data/missing_value_completion.py                  # スクリプト実行

      # このタイミングで Airbyte の変換(GCS → BigQuery)が入る

      - name: Run Python GaussianProcessRegressor_predict
        env:
          TOKEN: ${{ secrets.TOKEN }}                                         # 登録した Personal Access Token
        run: |
            sleep 1m                                                          # Airbyte を起動させている間の待機時間を2hで設定する→デバッグ中は1分
            export GOOGLE_APPLICATION_CREDENTIALS="./credential.json"         # 同じ処理をしないといけない。もっと良いやり方はありそう
            python src/ml/predict.py                                          # スクリプト実行
            rm credential.json                                                # 間違ってPUSHしないようにクレデンシャルファイルは削除する

      - name: Predict commit
        run: |
            git config --global user.email ${{secrets.EMAIL}}
            git config --global user.name ${{secrets.NAME}}
            git add -A
            git commit -m "add Predict Files"
            git push origin main